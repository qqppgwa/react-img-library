{"version":3,"sources":["components/ImageCell/ImageCell.module.css","pages/index/index.module.css","components/ImageCell/ImageCell.jsx","assets/api.js","pages/favorites/favorites.jsx","pages/index/index.jsx","App.jsx","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","ImageCell","props","state","islike","checkLike","list","id","className","styles","container","onClick","this","liked","bind","src","images","fixed_height_downsampled","url","alt","keyword","index","expires","Date","setDate","now","likes","cookie","load","length","indexOf","find","e","splice","setState","push","save","path","addLike","React","Component","connect","dispatch","likeNum","type","payload","apiKey","getImg","axios","create","baseURL","apiSearch","data","get","query","limit","offset","Favorites","status","ids","join","then","res","catch","err","content","imgData","i","key","SearchPage","btnDisabled","keying","changeStatus","pagination","total_count","more","dis","nextPage","disabled","v","s","l","concat","console","log","alert","InputArea","placeholder","onChange","onKeyPress","search","value","target","nativeEvent","keyCode","exact","to","component","favorites","Boolean","window","location","hostname","match","init","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5189ee02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImageCell_container__1_5Sa\",\"placeHolderShimmer2\":\"ImageCell_placeHolderShimmer2__34nAW\",\"liked\":\"ImageCell_liked__22-r5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"more\":\"index_more__3uzQM\",\"dis\":\"index_dis__yX8wo\"};","import React from 'react'\r\nimport styles from './ImageCell.module.css'\r\nimport cookie from 'react-cookies'\r\nimport { connect } from 'react-redux'\r\nclass ImageCell extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      islike: this.checkLike(props.list.id)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <figure className={styles.container} onClick={this.liked.bind(this)}>\r\n        <img src={this.props.list.images.fixed_height_downsampled.url} alt={this.props.keyword + ` ${this.props.index + 1}` || `favourite ${this.props.index + 1}`} />\r\n        <div className={this.state.islike ? styles.liked : ''}></div>\r\n      </figure>\r\n    )\r\n  }\r\n  liked() {\r\n    const expires = new Date()\r\n    expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * 14)\r\n    let likes = cookie.load('likeList') ? cookie.load('likeList') : []\r\n    // let likes = this.checkLike(this.props.list.id)\r\n    if (!this.state.islike || likes.length === 0) {\r\n      likes.push(this.props.list.id)\r\n\r\n      this.setState({ islike: true })\r\n      // this.props.addLike(likes.length)\r\n    } else if (this.state.islike) {\r\n      let index = likes.indexOf(likes.find(e => e === this.props.list.id))\r\n      likes.splice(index, 1)\r\n\r\n      this.setState({ islike: false })\r\n    }\r\n    cookie.save('likeList', likes, {\r\n      path: '/',\r\n      expires\r\n    })\r\n    this.props.addLike(likes.length)\r\n    // this.props.list.images.id\r\n  }\r\n  checkLike(id) {\r\n    if (cookie.load('likeList')) {\r\n      return cookie.load('likeList').find(e => e === id) ? true : false\r\n    }\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addLike: likeNum => {\r\n      return dispatch({\r\n        type: 'ADD_Like',\r\n        payload: {\r\n          likeNum: likeNum\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ImageCell)\r\n","import axios from 'axios';\r\nconst apiKey = 'IGLOYrMAV8KRjzGzj6vvF3dGx2WlASHZ'\r\nconst getImg = axios.create({\r\n    baseURL: 'https://api.giphy.com/v1'\r\n});\r\n// const searchPrefix='https://api.giphy.com/v1/gifs/search?api_key=IGLOYrMAV8KRjzGzj6vvF3dGx2WlASHZ&';\r\nexport const apiSearch = data => getImg.get(`/gifs/search?api_key=${apiKey}&q=${data.query}&limit=${data.limit}&offset=${data.offset}`);\r\nexport const apiImgId = data => getImg.get(`/gifs?api_key=${apiKey}&ids=${data.ids}`);","import React from 'react'\r\nimport cookie from 'react-cookies'\r\nimport ImageCell from '../../components/ImageCell/ImageCell.jsx'\r\nimport { apiImgId } from '../../assets/api'\r\nclass Favorites extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      status: '',\r\n      list: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (cookie.load('likeList') && cookie.load('likeList').length > 0) {\r\n      this.setState({\r\n        status: 'loading'\r\n      })\r\n      apiImgId({\r\n        ids: cookie.load('likeList').join()\r\n      })\r\n        .then(res => {\r\n          // console.log(res.data.data)\r\n          let data = res.data.data\r\n          if (data.length > 0) {\r\n            // console.log('uu')\r\n            this.setState({\r\n              status: 'showList',\r\n              list: data\r\n            })\r\n            // for (let i = 0; i < data.length; i++) {\r\n            // imgData.push(<ImageCell list={data.length[i]} key={i} index={i} />)\r\n            // content = imgData\r\n            // }\r\n          } else {\r\n            this.setState({\r\n              status: 'none'\r\n            })\r\n            // content = <p>error</p>\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            status: 'error'\r\n          })\r\n          // content = <p>error</p>\r\n        })\r\n      // apiImgId({\r\n      //   ids: cookie.load('likeList').join(),\r\n      //   limit: 8\r\n      // }).then(res => {\r\n      //   console.log(res)\r\n      // })\r\n    } else {\r\n      this.setState({\r\n        status: 'none'\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let content\r\n    let imgData = []\r\n\r\n    if (this.state.status === 'showList') {\r\n      for (let i = 0; i < this.state.list.length; i++) {\r\n        imgData.push(<ImageCell list={this.state.list[i]} key={i} index={i} />)\r\n        // console.log(imgData)\r\n        content = imgData\r\n      }\r\n    } else if (this.state.status === 'loading') {\r\n      content = <p>Loading</p>\r\n    } else if (this.state.list.length === 0) {\r\n      content = <p>No favourite image</p>\r\n    } else {\r\n      content = <p>error</p>\r\n    }\r\n    return <div className=\"imgList\">{content}</div>\r\n  }\r\n}\r\nexport default Favorites\r\n","import React from 'react'\r\nimport ImageCell from '../../components/ImageCell/ImageCell.jsx'\r\nimport { apiSearch } from '../../assets/api'\r\nimport styles from './index.module.css'\r\nclass SearchPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      keyword: '',\r\n      status: '',\r\n      list: [],\r\n      btnDisabled: false\r\n    }\r\n  }\r\n  render() {\r\n    let content\r\n    if (this.state.status === 'loading') {\r\n      content = <p>loading</p>\r\n    } else if (this.state.list.length > 0) {\r\n      content = []\r\n      for (let i = 0; i < this.state.list.length; i++) {\r\n        content.push(<ImageCell list={this.state.list[i]} key={i} index={i} keyword={this.state.keyword} />)\r\n      }\r\n    } else if (this.state.status === 'none') {\r\n      content = <p>no result</p>\r\n    } else {\r\n      content = <p>error</p>\r\n    }\r\n    return (\r\n      <div>\r\n        <InputArea keying={this.keying.bind(this)} changeStatus={this.changeStatus.bind(this)} list={this.list.bind(this)} state={this.state} />\r\n        <div className=\"imgList\">{this.state.status === '' ? null : content}</div>\r\n        {this.state.pagination && this.state.pagination.total_count - (this.state.pagination.offset + 8) > 0 && this.state.status === 'showlist' ? (\r\n          <button className={styles.more + (this.state.btnDisabled ? ` ${styles.dis}` : '')} onClick={this.nextPage.bind(this)} disabled={this.state.btnDisabled}>\r\n            load more\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n  keying(v) {\r\n    this.setState({ keyword: v })\r\n  }\r\n  changeStatus(s) {\r\n    if (s === 'loading') {\r\n      this.setState({ list: [] })\r\n    }\r\n    this.setState({ status: s })\r\n  }\r\n  list(l) {\r\n    this.setState({ list: this.state.list.concat(l.data), pagination: l.pagination })\r\n  }\r\n  nextPage() {\r\n    this.setState({ btnDisabled: true })\r\n    apiSearch({\r\n      query: this.state.keyword,\r\n      limit: '8',\r\n      offset: this.state.pagination.offset + 8\r\n    })\r\n      .then(res => {\r\n        this.list(res.data)\r\n        this.setState({ btnDisabled: false })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({ btnDisabled: false })\r\n        alert('error')\r\n        // this.props.changeStatus('error')\r\n        // this.setState({ status: 'error' })\r\n      })\r\n  }\r\n}\r\n// class Results extends React.Component {}\r\nclass InputArea extends React.Component {\r\n  render() {\r\n    return <input type=\"text\" placeholder=\"Start searching for images!\" onChange={this.keying.bind(this)} onKeyPress={this.search.bind(this)} value={this.props.state.keyword} />\r\n  }\r\n  keying(e) {\r\n    this.props.keying(e.target.value)\r\n  }\r\n  search(e) {\r\n    if (e.nativeEvent.keyCode === 13) {\r\n      this.props.changeStatus('loading')\r\n      // this.setState({ status: 'loading' })\r\n      apiSearch({\r\n        query: this.props.state.keyword,\r\n        limit: '8',\r\n        offset: '0'\r\n      })\r\n        .then(res => {\r\n          if (res.data.data.length > 0) {\r\n            this.props.changeStatus('showlist')\r\n\r\n            // this.setState({ status: 'showList' })\r\n          } else {\r\n            this.props.changeStatus('none')\r\n            // this.setState({ status: 'null' })\r\n          }\r\n          this.props.list(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          this.props.changeStatus('error')\r\n          // this.setState({ status: 'error' })\r\n        })\r\n    }\r\n  }\r\n}\r\nexport default SearchPage\r\n","import React from 'react'\nimport './App.css'\nimport { HashRouter, Route, NavLink, Switch } from 'react-router-dom'\nimport favorites from './pages/favorites/favorites.jsx'\nimport index from './pages/index/index.jsx'\nimport { connect } from 'react-redux'\n\nconst App = props => {\n  return (\n    <HashRouter>\n      <nav>\n        <h1>\n          Galler<span>easy</span>\n        </h1>\n        <NavLink exact to={'/'}>\n          search\n        </NavLink>\n        <NavLink exact to={'/favourites'}>\n          favourites (<span>{props.likeNum}</span>)\n        </NavLink>\n      </nav>\n      <Switch>\n        <Route path=\"/favourites\" component={favorites} />\n        <Route path=\"/\" component={index} />\n      </Switch>\n    </HashRouter>\n  )\n}\nconst mapStateToProps = ({ likeNum }) => {\n  return {\n    likeNum: likeNum\n  }\n}\n//\nexport default connect(mapStateToProps, null)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    createStore\r\n} from 'redux'\r\nimport cookie from 'react-cookies'\r\n\r\n// const expires = new Date()\r\n// expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * 14)\r\n// cookie.save(\r\n//     'userId',\r\n//     '1234', {\r\n//         path: '/',\r\n//         expires,\r\n\r\n\r\n//     }\r\n// )\r\n//reducer\r\n\r\nconst init = {\r\n    likeNum: cookie.load('likeList') ? cookie.load('likeList').length : 0\r\n}\r\nconst reducers = (state = init, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case 'ADD_Like':\r\n            return {\r\n                likeNum: payload.likeNum\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n//store\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport './index.css'\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker'\nimport {\n    Provider\n} from 'react-redux'\nimport store from './store/index';\n\nReactDOM.render( < Provider store = {\n            store\n        } >\n        <\n        App / >\n        <\n        /Provider>, document.getElementById('root'))\n\n        // If you want your app to work offline and load faster, you can change\n        // unregister() to register() below. Note this comes with some pitfalls.\n        // Learn more about service workers: https://bit.ly/CRA-PWA\n        serviceWorker.unregister()"],"sourceRoot":""}